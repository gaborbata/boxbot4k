apply plugin: 'java'

sourceCompatibility = 1.5
targetCompatibility = 1.5

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven { url 'http://repo.spring.io/libs-release' }
    }
    ext {
        appName = 'boxbot4k-app'
        appVersion = '1.0.1'
        finalName = "${appName}-${appVersion}"
        proguardBase = "${appName}-proguard-base"
        isWindows = org.gradle.internal.os.OperatingSystem.current().windows
    }
    dependencies {
        classpath 'net.sf.proguard:proguard-gradle:5.+'
    }
}

jar {
    baseName = isWindows ? proguardBase : finalName
    manifest { attributes 'Main-Class': 'B' }
}

task proguard(type: proguard.gradle.ProGuardTask) {
    description 'Generate optimized/obfuscated jar'
    injars "${buildDir}/libs/${proguardBase}.jar"
    outjars "${buildDir}/libs/${finalName}.jar"
    libraryjars "${System.getProperty('java.home')}/lib/rt.jar"
    keep 'public class B {public static void main(java.lang.String[]);}'
    enabled = isWindows
}

task unzip(type: Copy, dependsOn: proguard) {
    description 'Unpack generated jar file'
    from zipTree(file("${buildDir}/libs/${finalName}.jar"))
    into file("${buildDir}/unpacked")
    enabled = isWindows
}

task advzip(type:Exec, dependsOn: unzip) {
    description 'Pack jar with advzip'
    workingDir "${buildDir}/unpacked"
    commandLine "${projectDir}/tools/advzip.exe", '--add', '--shrink-insane', '--iter=100', '-q', "${buildDir}/libs/${finalName}.jar", '*.*'
    enabled = isWindows
}

task deleteProguardBase(type: Delete, dependsOn: advzip) {
    description 'Delete ProGuard base jar'
    delete "${buildDir}/libs/${proguardBase}.jar"
    enabled = isWindows
}

task checkFileSize(dependsOn: deleteProguardBase) << {
    description 'Check 4k file size limit'
    File file = new File("${buildDir}/libs/${finalName}.jar")
    if (isWindows && file.size() > 4096) {
        throw new GradleException('File size must not exceed 4096 bytes.')
    }
}

build.dependsOn checkFileSize
